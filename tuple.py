# tuple is immutable

tup = (1,2,3,4,5)
print(tup.count(3))  # 返回指定元素在元组中出现的次数
print(tup.index(4)) # 指定元素第一次出现的索引

# 将元组转换为列表
lst = list(tup)

# 修改列表
lst[2] = 10

# 将列表转换回元组
tup = tuple(lst)

print(tup)  # 输出 (1, 2, 10, 4, 5)

# 我们已经有了列表这种数据结构，为什么还需要元组这样的类型呢？

# 元组中的元素是无法修改的，事实上我们在项目中尤其是多线程环境（后面会讲到）中可能更喜欢使用的是那些不变对象（一方面因为对象状态不能修改，所以可以避免由此引起的不必要的程序错误，简单的说就是一个不变的对象要比可变的对象更加容易维护；另一方面因为没有任何一个线程能够修改不变对象的内部状态，一个不变对象自动就是线程安全的，这样就可以省掉处理同步化的开销。一个不变对象可以方便的被共享访问）。所以结论就是：如果不需要对元素进行添加、删除、修改的时候，可以考虑使用元组，当然如果一个方法要返回多个值，使用元组也是不错的选择。
# 元组在创建时间和占用的空间上面都优于列表。我们可以使用sys模块的getsizeof函数来检查存储同样的元素的元组和列表各自占用了多少内存空间，这个很容易做到。
